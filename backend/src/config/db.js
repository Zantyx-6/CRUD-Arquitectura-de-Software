// Importa el m√≥dulo 'mongoose', que es un ODM (Object Data Modeling) para MongoDB
// Mongoose simplifica la interacci√≥n con MongoDB, permitiendo el uso de esquemas y modelos para los datos.
import mongoose from "mongoose";

// Define una funci√≥n as√≠ncrona llamada 'connectDB' para conectar la aplicaci√≥n a la base de datos MongoDB
const connectDB = async () => {
  try {
    // Intenta conectarse a MongoDB usando la URI definida en las variables de entorno
    // 'process.env.MONGO_URI' debe contener la URI de conexi√≥n a la base de datos
    // 'process.env.DB_NAME' especifica el nombre de la base de datos a la que te quieres conectar
    // 'serverSelectionTimeoutMS' define el tiempo de espera m√°ximo para seleccionar un servidor de la base de datos (5 segundos)
    await mongoose.connect(process.env.MONGO_URI, {
      dbName: process.env.DB_NAME, // Nombre de la base de datos
      serverSelectionTimeoutMS: 5000, // Timeout de 5 segundos
    });
    
    // Si la conexi√≥n es exitosa, muestra un mensaje de √©xito en la consola
    console.log("‚úÖ Conectado a MongoDB Atlas");
    
    // Muestra informaci√≥n adicional sobre la base de datos y el host de conexi√≥n
    console.log(`üì¶ Base de datos: ${mongoose.connection.db.databaseName}`);  // Nombre de la base de datos conectada
    console.log(`üõ∞Ô∏è  Host: ${mongoose.connection.host}`);                    // Host al que est√° conectada la base de datos
    
    // Verificaci√≥n adicional de conexi√≥n
    // Usa la API administrativa de MongoDB para hacer un ping a la base de datos y asegurarse de que la conexi√≥n est√° activa
    await mongoose.connection.db.admin().ping();
    console.log("‚ú≥Ô∏è Ping a MongoDB exitoso");  // Mensaje indicando que el ping fue exitoso
    
  } catch (error) {
    // Si hay un error en la conexi√≥n, muestra el mensaje de error en la consola
    console.error("‚ùå Error de conexi√≥n a MongoDB:", error.message);
    
    // Si ocurre un error, termina el proceso con un c√≥digo de salida 1, lo que indica un fallo
    process.exit(1);
  }
};

// Manejo de eventos de conexi√≥n de mongoose

// Evento que se emite cuando Mongoose se conecta exitosamente a la base de datos
mongoose.connection.on("connected", () => {
  console.log("üîó Mongoose conectado");  // Mensaje de √©xito cuando Mongoose est√° conectado
});

// Evento que se emite cuando ocurre un error en la conexi√≥n de Mongoose
mongoose.connection.on("error", (err) => {
  // Muestra un mensaje de error con los detalles del problema de conexi√≥n
  console.error(`üö® Error de Mongoose: ${err.message}`);
});

// Exporta la funci√≥n 'connectDB' para que pueda ser utilizada en otras partes de la aplicaci√≥n (por ejemplo, en el archivo principal)
export default connectDB;
